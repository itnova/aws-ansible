---
# Usage (flags are optional):
#  ansible-playbook deploy-webnode.yml -e flag1=keep-maintenance -e flag2=no-git
#  note: the flags can be swithed, flag1=no-git is also correct.
#  note: When no tasks complete check your syntax.

- name: deploy-webnode.yml
  hosts: all,localhost
  vars:
    flag1: ""
    flag2: ""
    flag3: ""
    flag4: ""

  tasks:
### Will check if new EC2 instances are added in AWS, and if so load the new facts ##
    - name: Playbook - Register local facts file
      command: cat /etc/hsl.def
      register: file_hsl_def
      changed_when: false

    - name: Playbook - Make the facts available for ansible
      copy:
        content: "[general]\n{{ file_hsl_def.stdout }}\n"
        dest: /etc/ansible/facts.d/custom.fact
        mode: 0644

    - name: Playbook - Regather facts - ansible_local
      setup:
        filter: ansible_local
################################################################################

    - name: "Playbook - aws:update:webnode -v"
      shell: "cd /var/www/vhosts/{{ ansible_local.custom.general.customer_name }}/httpdocs && bin/deploy aws:update:webnode -v {{flag1}} {{flag2}} {{flag3}} {{flag4}}"
      args:
        chdir: /
      register: shell_result

    - name: "Playbook - aws:update:webnode - Shell Standard Output"
      debug:
        var: shell_result.stdout_lines

    - name: "Playbook - aws:update:webnode - Shell Standard Error"
      debug:
        var: shell_result.stderr
